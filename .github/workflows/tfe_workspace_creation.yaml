name: Create TFE Workspace 

on:
  workflow_dispatch:
    inputs:
      buildingBlockRun:
        description: "meshStack Building Block Run (Base64 encoded)"
        required: true

jobs:
  create-workspace:
    runs-on: visa

    steps:
      - name: Set up Environment
        env:
          BUILDING_BLOCK_RUN: ${{ github.event.inputs.buildingBlockRun }}
        run: |
          echo "$BUILDING_BLOCK_RUN" | base64 --decode > run.json
          cat run.json

      - name: Extract Inputs and create workspace
        env:
          TFE_ORG: ${{ secrets.TFE_ORG }}
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
          VCS_Github_APP_ID: ${{ secrets.TFE_Github_APP_ID }}
          OAUTH_TOKEN_ID: ${{ secrets.OAUTH_TOKEN_ID }}
        run: |
          WORKSPACE_NAME=$(jq -r 'first(.spec.buildingBlock.spec.inputs[] | select(.key=="workspace_name") | .value)' run.json | tr -d '\n\r' | xargs)
          echo "workspace name is $WORKSPACE_NAME"
          TF_VERSION=$(jq -r 'first(.spec.buildingBlock.spec.inputs[] | select(.key=="terraform_version") | .value)' run.json | tr -d '\n\r' | xargs)
          echo "TF version is $TF_VERSION"
          WORKING_DIR=$(jq -r 'first(.spec.buildingBlock.spec.inputs[] | select(.key=="working_directory") | .value)' run.json | tr -d '\n\r' | xargs)
          echo "workspace dir is $WORKING_DIR"
          VCS_IDENTIFIER=$(jq -r 'first(.spec.buildingBlock.spec.inputs[] | select(.key=="vcs_identifier") | .value)' run.json | tr -d '\n\r' | xargs)
          VCS_BRANCH=$(jq -r 'first(.spec.buildingBlock.spec.inputs[] | select(.key=="vcs_branch") | .value)' run.json | tr -d '\n\r' | xargs)
      
          echo "Creating workspace ${WORKSPACE_NAME}..."
      
          curl --request POST \
            --url "https://app.terraform.io/api/v2/organizations/${TFE_ORG}/workspaces" \
            --header "Authorization: Bearer ${TFE_TOKEN}" \
            --header "Content-Type: application/vnd.api+json" \
            --data '{
              "data": {
                "attributes": {
                  "name": "${WORKSPACE_NAME}",
                  "description": "Workspace created via GitHub Action",
                  "terraform-version": "${TF_VERSION}",
                  "working-directory": "${WORKING_DIR}",
                  "vcs-repo": {
                    "identifier": "${VCS_IDENTIFIER}",
                    "branch": "${VCS_BRANCH}",
                    "oauth-token-id": "${OAUTH_TOKEN_ID}"
                  },
                  "execution-mode": "remote",
                  "auto-apply": true
                },
                "type": "workspaces"
              }
            }'

          echo "Workspace ${WORKSPACE_NAME} created."
